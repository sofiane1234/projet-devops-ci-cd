name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set ARM environment variables
        run: |
          echo "ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientSecret)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .tenantId)" >> $GITHUB_ENV

      - name: Générer github.auto.tfvars avec credentials + mot de passe
        run: |
          SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .subscriptionId)
          CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientId)
          CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .clientSecret)
          TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r .tenantId)

          POSTGRES_PWD="Draris_1126?"  # injecté ici sans besoin d’autre secret

          echo "subscription_id         = \"$SUBSCRIPTION_ID\"" > infra/terraform/github.auto.tfvars
          echo "client_id               = \"$CLIENT_ID\""       >> infra/terraform/github.auto.tfvars
          echo "client_secret           = \"$CLIENT_SECRET\""   >> infra/terraform/github.auto.tfvars
          echo "tenant_id               = \"$TENANT_ID\""       >> infra/terraform/github.auto.tfvars
          echo "postgres_admin_password = \"$POSTGRES_PWD\""   >> infra/terraform/github.auto.tfvars

      - name: Terraform Init
        run: terraform -chdir=infra/terraform init -input=false -no-color

      - name: Terraform Plan
        run: terraform -chdir=infra/terraform plan -input=false -no-color -lock=false -out=tfplan

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform -chdir=infra/terraform apply -input=false -no-color tfplan
