name: CI DevOps Frontend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend-ci:
    runs-on: ubuntu-latest

    env:
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: frontend
      run: npm install

    - name: Lint (ESLint)
      working-directory: frontend
      run: npm run lint
      continue-on-error: true

    - name: Copy test folder for CRA compatibility
      working-directory: frontend
      run: cp -r test src/test-ci

    - name: Run unit tests (Jest)
      working-directory: frontend
      run: npm test -- --watchAll=false --coverage

    - name: Clean up temporary test folder
      working-directory: frontend
      run: rm -rf src/test-ci

    - name: Build React app
      working-directory: frontend
      run: npm run build

    - name: Docker login
      run: |
        echo "${ACR_PASSWORD}" | docker login acrdevopssosso.azurecr.io -u "${ACR_USERNAME}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t acrdevopssosso.azurecr.io/frontend:${{ github.sha }} frontend/
        docker tag acrdevopssosso.azurecr.io/frontend:${{ github.sha }} acrdevopssosso.azurecr.io/frontend:latest
        docker push acrdevopssosso.azurecr.io/frontend:${{ github.sha }}
        docker push acrdevopssosso.azurecr.io/frontend:latest

    - name: Scan vulnerabilities with Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
        ./bin/trivy image acrdevopssosso.azurecr.io/frontend:latest

    - name: Archive Jest coverage report
      uses: actions/upload-artifact@v4
      with:
        name: couverture-tests-frontend
        path: frontend/coverage
