name: Pipeline cd-frontend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get frontend secrets (staging)
        run: |
          az keyvault secret show --vault-name kv-devops-ci --name FRONTEND_ENV --query value -o tsv >> .env

      - name: Build Docker image
        working-directory: frontend
        run: docker build -t frontend:latest .

      - name: Docker login to ACR
        run: echo ${{ secrets.ACR_PASSWORD }} | docker login myacr.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Tag & push image to ACR
        run: |
          docker tag frontend:latest myacr.azurecr.io/frontend:latest
          docker push myacr.azurecr.io/frontend:latest

      - name: Deploy frontend container to Azure (staging)
        run: |
          az webapp create --name frontend-staging \
                          --resource-group RG-TP \
                          --plan frontend-plan \
                          --deployment-container-image-name myacr.azurecr.io/frontend:latest

      - name: Run Cypress E2E tests
        working-directory: frontend
        run: |
          npm install --save-dev cypress
          npx cypress run

  deploy-production:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout frontend
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get frontend secrets (production)
        run: |
          az keyvault secret show --vault-name kv-devops-ci --name FRONTEND_ENV_PROD --query value -o tsv >> .env

      - name: Build Docker image
        working-directory: frontend
        run: docker build -t frontend:latest .

      - name: Docker login to ACR
        run: echo ${{ secrets.ACR_PASSWORD }} | docker login myacr.azurecr.io --username ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Tag & push image to ACR
        run: |
          docker tag frontend:latest myacr.azurecr.io/frontend:latest
          docker push myacr.azurecr.io/frontend:latest

      - name: Deploy frontend container to Azure (production)
        run: |
          az webapp create --name frontend-prod \
                          --resource-group RG-TP \
                          --plan frontend-plan \
                          --deployment-container-image-name myacr.azurecr.io/frontend:latest
